{"version":3,"sources":["components/Statistics/Statistics.js","components/Options/Options.js","components/Feedback/Feedback.js","components/Notification/Notification.js","App.js","index.js","components/Options/Options.module.css"],"names":["Statistics","good","neutral","bad","total","positivePercentage","Options","options","onLeaveFeedback","className","styles","buttonsBlock","map","option","type","name","onClick","shortid","generate","Feedback","title","children","Notification","message","App","state","countTotalFeedback","countPositiveFeedbackPercentage","result","percentage","Math","round","e","target","setState","prevState","this","objKey","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"yPAuBeA,EApBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qCACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,Y,gCCgBSC,EArBC,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAC1B,OACE,qBAAKC,UAAWC,IAAOC,aAAvB,SACGJ,EAAQK,KAAI,SAAAC,GAAM,OACjB,wBAEEC,KAAK,SACLC,KAAMF,EACNG,QAASR,EAJX,SAMGK,GALII,IAAQC,kBCKRC,EAZE,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACzB,OACE,qCACE,6BAAKD,IACJC,MCOQC,EAXM,SAAC,GAAwB,IAAtBF,EAAqB,EAArBA,MAAOG,EAAc,EAAdA,QAC7B,OACE,qCACE,6BAAKH,IACL,4BAAIG,QCDWC,E,4MACnBC,MAAQ,CACNxB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPuB,mBAAqB,WACnB,MAA+B,EAAKD,MAEpC,OAFA,EAAQxB,KAAR,EAAcC,QAAd,EAAuBC,K,EAKzBwB,gCAAkC,WAChC,IAAMC,EAAS,EAAKF,qBAEdG,EAAqB,IADV,EAAKJ,MAAdxB,KAC0B2B,EAClC,OAAOE,KAAKC,MAAMF,I,EAGpBrB,gBAAkB,SAAAwB,GAChB,IAAMjB,EAAOiB,EAAEC,OAAOlB,KACtB,EAAKmB,UAAS,SAAAC,GAAS,sBACpBpB,EAAOoB,EAAUpB,GAAQ,O,4CAG9B,WACE,MAA+BqB,KAAKX,MAA5BxB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBC,EAAQgC,KAAKV,qBACbrB,EAAqB+B,KAAKT,kCAE1BU,EAASC,OAAOC,KAAKH,KAAKX,OAChC,OACE,oCACE,cAAC,EAAD,CAAUL,MAAM,wBAAhB,SACE,cAAC,EAAD,CAASb,QAAS8B,EAAQ7B,gBAAiB4B,KAAK5B,oBAGvC,IAAVJ,EACC,cAAC,EAAD,CAAUgB,MAAM,aAAhB,SACE,cAAC,EAAD,CAAcG,QAAQ,wBAGxB,cAAC,EAAD,CAAUH,MAAM,aAAhB,SACE,cAAC,EAAD,CACEnB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,a,GAjDDmC,a,MCDjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,aAAe,iC","file":"static/js/main.c1da58ef.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <>\n      <p>Good: {good}</p>\n      <p>Neutral: {neutral}</p>\n      <p>Bad: {bad}</p>\n      <p>Total: {total}</p>\n      <p>Positive feedback: {positivePercentage} %</p>\n    </>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport shortid from 'shortid';\nimport PropTypes from 'prop-types';\nimport styles from '../Options/Options.module.css';\n\nconst Options = ({ options, onLeaveFeedback }) => {\n  return (\n    <div className={styles.buttonsBlock}>\n      {options.map(option => (\n        <button\n          key={shortid.generate()}\n          type=\"button\"\n          name={option}\n          onClick={onLeaveFeedback}\n        >\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n};\nOptions.propTypes = {\n  options: PropTypes.array.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default Options;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Feedback = ({ title, children }) => {\n  return (\n    <>\n      <h2>{title}</h2>\n      {children}\n    </>\n  );\n};\n\nFeedback.propTypes = {\n  title: PropTypes.string.isRequired,\n};\nexport default Feedback;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ title, message }) => {\n  return (\n    <>\n      <h2>{title}</h2>\n      <p>{message}</p>\n    </>\n  );\n};\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\nexport default Notification;\n","import React, { Component } from 'react';\nimport Statistics from './components/Statistics';\nimport Options from './components/Options';\nimport Feedback from './components/Feedback';\nimport Notification from './components/Notification';\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    const result = good + neutral + bad;\n    return result;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const result = this.countTotalFeedback();\n    const { good } = this.state;\n    const percentage = (good * 100) / result;\n    return Math.round(percentage);\n  };\n\n  onLeaveFeedback = e => {\n    const name = e.target.name;\n    this.setState(prevState => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n\n    const objKey = Object.keys(this.state);\n    return (\n      <section>\n        <Feedback title=\"Please leave feedback\">\n          <Options options={objKey} onLeaveFeedback={this.onLeaveFeedback} />\n        </Feedback>\n\n        {total === 0 ? (\n          <Feedback title=\"Statistics\">\n            <Notification message=\"No feedback given\" />\n          </Feedback>\n        ) : (\n          <Feedback title=\"Statistics\">\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positivePercentage}\n            />\n          </Feedback>\n        )}\n      </section>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonsBlock\":\"Options_buttonsBlock__pwzlK\"};"],"sourceRoot":""}